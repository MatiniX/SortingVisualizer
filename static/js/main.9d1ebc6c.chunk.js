(this.webpackJsonptest=this.webpackJsonptest||[]).push([[0],{15:function(e,a,t){e.exports=t.p+"static/media/Merge-sort-example-300px.a29c0dd0.gif"},16:function(e,a,t){e.exports=t.p+"static/media/Sorting_quicksort_anim.d4e5d0a7.gif"},17:function(e,a,t){e.exports=t.p+"static/media/Bubble-sort-example-300px.d4c88b8c.gif"},18:function(e,a,t){e.exports=t.p+"static/media/Insertion-sort-example-300px.6e67d1c7.gif"},19:function(e,a,t){e.exports=t.p+"static/media/Selection-Sort-Animation.f20b8898.gif"},22:function(e,a,t){e.exports=t(41)},27:function(e,a,t){},28:function(e,a,t){},41:function(e,a,t){"use strict";t.r(a);var n=t(0),r=t.n(n),o=t(4),l=t.n(o),i=(t(27),t(28),t(2)),s=t(3),c=t.n(s),m=t(6);function u(){return(u=Object(m.a)(c.a.mark((function e(a,t,n,r){var o;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(a.length<=1)){e.next=2;break}return e.abrupt("return",a);case 2:return o=a.slice(),e.next=5,p(a,0,a.length-1,o,t,n);case 5:r();case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function p(e,a,t,n,r,o){return d.apply(this,arguments)}function d(){return(d=Object(m.a)(c.a.mark((function e(a,t,n,r,o,l){var i;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t!==n){e.next=2;break}return e.abrupt("return");case 2:return i=Math.floor((t+n)/2),e.next=5,Promise.all([p(r,t,i,a,o,l)],[p(r,i+1,n,a,o,l)]);case 5:return e.next=7,v(a,t,i,n,r,o,l);case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function v(e,a,t,n,r,o,l){return k.apply(this,arguments)}function k(){return(k=Object(m.a)(c.a.mark((function e(a,t,n,r,o,l,i){var s,m,u;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:s=t,m=t,u=n+1;case 3:if(!(m<=n&&u<=r)){e.next=13;break}return l[m].style.backgroundColor="#dd0510",l[u].style.backgroundColor="#dd0510",e.next=8,E(i);case 8:l[m].style.backgroundColor="#05b2dd",l[u].style.backgroundColor="#05b2dd",o[m]<=o[u]?(l[s].style.height="".concat(.75*o[m],"px"),a[s++]=o[m++]):(l[s].style.height="".concat(.75*o[u],"px"),a[s++]=o[u++]),e.next=3;break;case 13:if(!(m<=n)){e.next=22;break}return l[m].style.backgroundColor="#dd0510",e.next=17,E(i);case 17:l[m].style.backgroundColor="#05b2dd",l[s].style.height="".concat(.75*o[m],"px"),a[s++]=o[m++],e.next=13;break;case 22:if(!(u<=r)){e.next=31;break}return l[u].style.backgroundColor="#dd0510",e.next=26,E(i);case 26:l[u].style.backgroundColor="#05b2dd",l[s].style.height="".concat(.75*o[u],"px"),a[s++]=o[u++],e.next=22;break;case 31:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function b(){return(b=Object(m.a)(c.a.mark((function e(a,t,n,r){return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(a.length<=1)){e.next=2;break}return e.abrupt("return",a);case 2:return e.next=4,h(a,0,a.length-1,t,n);case 4:r();case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function h(e,a,t,n,r){return j.apply(this,arguments)}function j(){return(j=Object(m.a)(c.a.mark((function e(a,t,n,r,o){var l;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(t<n)){e.next=6;break}return e.next=3,y(a,t,n,r,o);case 3:return l=e.sent,e.next=6,Promise.all([h(a,t,l-1,r,o)],[h(a,l+1,n,r,o)]);case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function y(e,a,t,n,r){return g.apply(this,arguments)}function g(){return(g=Object(m.a)(c.a.mark((function e(a,t,n,r,o){var l,i,s,m,u;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r[n].style.backgroundColor="green",l=a[n],i=t-1,s=t;case 4:if(!(s<n)){e.next=26;break}return r[s].style.backgroundColor="#dd0510",e.next=8,E(o);case 8:if(!(a[s]<l)){e.next=22;break}return i++,r[i].style.backgroundColor="#dd0510",e.next=13,E(o);case 13:return r[i].style.height="".concat(.75*a[s],"px"),r[i].style.backgroundColor="#05b2dd",m=a[i],r[s].style.height="".concat(.75*m,"px"),r[s].style.backgroundColor="#05b2dd",e.next=20,E(o);case 20:a[i]=a[s],a[s]=m;case 22:r[s].style.backgroundColor="#05b2dd";case 23:s++,e.next=4;break;case 26:return r[n].backgroundColor="#dd0510",r[i+1].style.height="".concat(.75*a[n],"px"),r[i+1].style.backgroundColor="#05b2dd",e.next=31,E(o);case 31:return u=a[i+1],r[n].style.height="".concat(.75*u,"px"),r[n].style.backgroundColor="#05b2dd",a[i+1]=a[n],a[n]=u,e.abrupt("return",i+1);case 37:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function E(e){return new Promise((function(a){return setTimeout(a,e)}))}var f={getMergeSortAnimations:function(e,a,t,n){return u.apply(this,arguments)},getQuickSortAnimations:function(e,a,t,n){return b.apply(this,arguments)},getBubbleSortAnimations:function(e){var a=[];return function(e,a){for(var t=0;t<e.length-1;t++)for(var n=0;n<e.length-t-1;n++){if(a.push([n,n+1]),e[n]>e[n+1]){var r=e[n];e[n]=e[n+1],e[n+1]=r}a.push([n,e[n]]),a.push([n+1,e[n+1]]),a.push([n,n+1])}}(e,a),a},getInsertionSortAnimations:function(e){var a=[];return function(e,a){var t;a.push([]);for(var n=1;n<e.length;n++){for(t=n,a.push([t,e[t],"#dd0510"]);t>0&&e[t-1]>e[t];){a.push([t,e[t-1],"green"]),a.push([t-1,e[t],"#dd0510"]);var r=e[t];e[t]=e[t-1],e[t-1]=r,t--}a.push([t,e[t],"green"])}a.push([])}(e,a),a},getSelectionSortAnimations:function(e){var a=[];return function(e,a){for(var t=0;t<e.length;t++){var n=t;a.push([t,e[t],"#dd0510"]),a.push([t,e[t],"#05b2dd"]);for(var r=t+1;r<e.length;r++)a.push([r,e[r],"#dd0510"]),a.push([r,e[r],"#05b2dd"]),e[r]<e[n]&&(a.push([n,e[n],"#05b2dd"]),n=r,a.push([n,e[n],"brown"]));var o=e[t];e[t]=e[n],e[n]=o,a.push([t,e[t],"green"]),t!==n&&a.push([n,e[n],"#05b2dd"])}a.push([])}(e,a),a},getShellSortAnimations:function(e){var a=[];return function(e,a){for(var t=Math.floor(e.length/2);t>0;t=Math.floor(t/2))for(var n=t;n<e.length;n++){var r=e[n],o=void 0;for(o=n;o>=t&&e[o-t]>r;o-=t)a.push([o,o-t,"compare"]),a.push([o,o-t,"compare"]),a.push([o,e[o-t],"#05b2dd"]),e[o]=e[o-t];a.push([o,r,"#dd0510"]),a.push([o,r,"#05b2dd"]),e[o]=r}}(e,a),a}},z=t(14),x=t(21),S=t(7),N=t.n(S),w=t(15),I=t.n(w);function A(e){return r.a.createElement("div",{className:"info-tab"},r.a.createElement("button",{className:"close-button",onClick:e.close},"\u2716"),r.a.createElement("h2",{className:"info-tab-title"},"Merge Sort"),r.a.createElement("div",{className:"about-section"},r.a.createElement("p",null,'Merge sort je efekt\xedvny v\u0161eobecne-\xfa\u010delov\xfd triediaci algoritmus. Patr\xed do kateg\xf3rie "Rozdeli\u0165 a dobi\u0165" algoritmov. To znamen\xe1, \u017ee v\xe4\u010d\u0161ie probl\xe9my rozdel\xed na men\u0161ie \u013eah\u0161ie rie\u0161ite\u013en\xe9. Bol vyn\xe1jden\xfd roku 1945 Johnom von Neumannom.'),r.a.createElement("h3",null,"Algoritmus:"),r.a.createElement("div",null,"Konceptu\xe1lne merge sort funguje n\xe1sledovne:",r.a.createElement("div",{className:"list-img"},r.a.createElement("ol",null,r.a.createElement("li",null,r.a.createElement("p",null,'Rozdelova\u0165 nezoraden\xfd list a\u017e k\xfdm neostane n "pod-listov", ktor\xe9 obsahuj\xfa ka\u017ed\xfd 1 prvok (list s jedn\xfdm prvkom je pova\u017eovan\xfd za zoraden\xfd)')),r.a.createElement("li",null,r.a.createElement("p",null,'Opakovane zlu\u010dova\u0165 tieto "pod-listy" a v\xfdtv\xe1ra\u0165 nov\xe9 zoraden\xe9 "pod-listy" a\u017e k\xfdm neostane len jeden. To bude n\xe1\u0161 zoraden\xfd list.'))),r.a.createElement("img",{src:I.a,alt:"mal bi tu by\u0165 animovan\xfd obr\xe1zok ale nen\xed :("})),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("p",null,r.a.createElement("p",{className:"pop-up"},"\u010casov\xe1 komplexnos\u0165",r.a.createElement("div",null,"\u010casov\xe1 komplexnos\u0165 algoritmu popisuje \u010das, ktor\xfd algoritmus potrebuje k svojej exek\xfacii. Oby\u010dajne je odhadnut\xe1 po\u010ditan\xedm po\u010dtom z\xe1kladnych oper\xe1cii, ktor\xe9 algoritmus urob\xed za predpokladu \u017ee ka\u017ed\xe1 t\xe1to oper\xe1cia zaberie kon\u0161tantn\xfd \u010das."),"\xa0"),"Merge sortu je O(n log n) pre priemern\xfd aj najhor\u0161\xed pr\xedpad. Neoperuje v\u0161ak na mieste. To znamen\xe1, \u017ee s\xfa potrebn\xe9 pomocn\xe9 k\xf3pie hodn\xf4t."),r.a.createElement("p",null,"Implementova\u0165 sa d\xe1 dvomi sp\xf4sobmi. Zhora-dole a Zdola-hore. Pri implement\xe1ci\xed zhora-dole algoritmus rekurz\xedvne del\xed list na polovice a\u017e k\xfdm neostan\xfa listy s jedn\xfdm prvkom a potom tieto listy postupne zl\xfa\u010di a zorad\xed. Pri implement\xe1ci\xed zdola-hore s\xfa jednotliv\xe9 prvky v u\u017e bran\xe9 ako listy s jedn\xfdm prvkom a iterat\xedvne zlu\u010dovan\xe9 a zoradovan\xe9."),r.a.createElement("div",{className:"code-section"},r.a.createElement("code",null,r.a.createElement("pre",null,"function merge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray) {\n    var k = startIdx;\n    var i = startIdx;\n    var j = middleIdx + 1;\n\n    while (i <= middleIdx && j <= endIdx) {\n        if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n            mainArray[k] = auxiliaryArray[i];\n            k++;\n            i++;\n        }\n        else {\n            mainArray[k] = auxiliaryArray[j];\n            k++;\n            j++;\n        }\n    }\n    while (i <= middleIdx) {\n        mainArray[k] = auxiliaryArray[i];\n        k++;\n        i++;\n    }\n    while (j <= endIdx) {\n        mainArray[k] = auxiliaryArray[j];\n        k++;\n        j++;\n    }\n}\n\nfunction mergeSort(mainArray, startIdx, endIdx, auxiliaryArray) {\n    if(startIdx === endIdx) return;\n    var middleIdx = Math.floor((startIdx + endIdx) / 2);\n\n    mergeSort(auxiliaryArray, startIdx , middleIdx, mainArray);\n    mergeSort(auxiliaryArray, middleIdx + 1, endIdx, mainArray);\n\n    merge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray);\n}"))),r.a.createElement("div",{className:"explanation-section"},"Tak\xfdmto sp\xf4sobom je implementovan\xfd merge sort na tejto str\xe1nke. Ide o implement\xe1ciu zhora-dole. Kde ",r.a.createElement("p",{className:"code-highlight"},"mainArray")," je list, ktor\xfd chceme zoradi\u0165 a ",r.a.createElement("p",{className:"code-highlight"},"auxiliaryArray")," je k\xf3pia tohto listu. Aktu\xe1lne zora\u010fovanie potom prebieha vo funkcii ",r.a.createElement("p",{className:"code-highlight"},"merge()"),". Potom funkcia ",r.a.createElement("p",{className:"code-highlight"},"mergeSort()")," rekurz\xedvne vol\xe1 samu seba na obidvoch poloviciach listu s t\xfdm rozdielom, \u017ee tento raz vymen\xedme poradie parametrov a namiesto ",r.a.createElement("p",{className:"code-highlight"},"mainArray")," d\xe1me ",r.a.createElement("p",{className:"code-highlight"},"auxiliaryArray"),". Takto postupne zorad\xedme ",r.a.createElement("p",{className:"code-highlight"},"auxiliaryArray"),", a\u017e k\xfdm neostan\xfa dve zoraden\xe9 polovice listu tie potom v zl\xfa\u010dime do fin\xe1lneho listu ako mo\u017eno vidie\u0165 vo vizualiz\xe1cii. Treba si uvedomi\u0165 \u017ee cel\xfd \u010das pracujeme na ",r.a.createElement("p",{className:"code-highlight"},"auxiliaryArray"),", ktor\xfa postupne rozde\u013eujeme a n\xe1sledovne zlu\u010dujeme a a\u017e v poslednej iter\xe1cii rekurzie zl\xfa\u010dime hodnoty do ",r.a.createElement("p",{className:"code-highlight"},"mainArray")," \u010do bude na\u0161a fin\xe1lna zoraden\xe1 verzia listu. Vo vizualiz\xe1cii m\xf4\u017eete vidie\u0165 rekurziu prebieha\u0165 s\xfa\u010dasne."),r.a.createElement("div",{className:"references-box"},r.a.createElement("b",null,"Zdroje:"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Merge_sort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.youtube.com/watch?v=JSceec-wEyw",target:"_blank",rel:"noopener noreferrer"},"Kr\xe1tke video, ktor\xe9 zn\xe1zor\u0148uje koncept algoritmu")))))}var O=t(16),C=t.n(O);function T(e){return r.a.createElement("div",{className:"info-tab"},r.a.createElement("button",{className:"close-button",onClick:e.close},"\u2716"),r.a.createElement("h2",{className:"info-tab-title"},"Quick Sort"),r.a.createElement("div",{className:"about-section"},r.a.createElement("p",null,'Quick sort je efekt\xedvny triediaci algoritmus, ktor\xfd patr\xed do kateg\xf3rie "Rozdeli\u0165 a dobi\u0165" algoritmov. Vyn\xe1jden\xfd bol roku 1959 britsk\xfdm po\u010d\xedta\u010dov\xfdm vedcom menom Tony Hoare a dodnes je to be\u017ene pou\u017e\xedvna\xfd algoritmus pre triedenie. Spr\xe1vne implementovan\xfd m\xf4\u017ee b\xfd\u0165 2- a\u017e 3- kr\xe1t r\xfdchlej\u0161\xed ako jeho hlavn\xfd konkurenti merge sort a heap sort.'),r.a.createElement("h3",null,"Algoritmus:"),r.a.createElement("div",null,"Konceptu\xe1lne quick sort funguje n\xe1sledovne:",r.a.createElement("div",{className:"list-img"},r.a.createElement("ol",null,r.a.createElement("li",null,r.a.createElement("p",null,"Vybra\u0165 z listu prvok zvan\xfd ",r.a.createElement("i",null,"pivot"),".")),r.a.createElement("li",null,r.a.createElement("p",null,r.a.createElement("i",null,"Delenie:")," Zoradi\u0165 prvky v liste tak aby prvky s hodnotou men\u0161iou ako ",r.a.createElement("i",null,"pivot")," boli v liste pred ",r.a.createElement("i",null,"pivotom")," (na\u013eavo od ",r.a.createElement("i",null,"pivota"),") a aby prvky v\xe4\u010d\u0161ie ako ",r.a.createElement("i",null,"pivot")," boli v liste za n\xedm (napravo od ",r.a.createElement("i",null,"pivota"),").",r.a.createElement("br",null),"\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Po tomto je ",r.a.createElement("i",null,"pivot")," vo svojej fin\xe1lnej poz\xedcii.")),r.a.createElement("li",null,r.a.createElement("p",null,"Rekurz\xedvne aplikova\u0165 tieto kroky na pod-list na\u013eavo od ",r.a.createElement("i",null,"pivota")," a rovnako na pod-list napravo."))),r.a.createElement("img",{src:C.a,style:{margin:"2em 0 0 2em"},alt:"mal by tu by\u0165 animovan\xfd obr\xe1zok ale nen\xed :("})),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("p",null,r.a.createElement("p",{className:"pop-up"},"\u010casov\xe1 komplexnos\u0165",r.a.createElement("div",null,"\u010casov\xe1 komplexnos\u0165 algoritmu popisuje \u010das, ktor\xfd algoritmus potrebuje k svojej exek\xfacii. Oby\u010dajne je odhadnut\xe1 po\u010ditan\xedm po\u010dtom z\xe1kladnych oper\xe1cii, ktor\xe9 algoritmus urob\xed za predpokladu \u017ee ka\u017ed\xe1 t\xe1to oper\xe1cia zaberie kon\u0161tantn\xfd \u010das."),"\xa0")," quick sortu je O(n log n) pre priemern\xfd pr\xedpad ale pre najhor\u0161\xed pr\xedpad je to O(n",r.a.createElement("sup",null,"2"),"). Najhor\u0161\xed pr\xedpad je v\u0161ak pomerne vz\xe1cny. Operuje na mieste, potrebuje len mal\xe9 mono\u017estvo dotato\u010dnej pam\xe4te aby zoradil prvky."),r.a.createElement("p",null,"Implementova\u0165 sa d\xe1 mnoh\xfdmi sp\xf4sobmi. Implement\xe1cie sa potom l\xed\u0161ia na z\xe1klade toho aku sch\xe9mu pre delenie prvkov pou\u017e\xedvaj\xfa a ak\xfdm sp\xf4sobom je vybran\xfd ",r.a.createElement("i",null,"pivot")," v liste."),r.a.createElement("p",null,"Sch\xe9my pre delenie s\xfa 2:",r.a.createElement("br",null),r.a.createElement("b",null,"Lomutova sch\xe9ma.")," T\xe1to sch\xe9ma najprv zvol\xed ",r.a.createElement("i",null,"pivota")," (typicky posledn\xfd prvok v liste). Potom algoritmus zachov\xe1va index ",r.a.createElement("i",null,"i")," zatia\u013e \u010do skenuje list za pomoci \u010fal\u0161ieho indexu ",r.a.createElement("i",null,"j")," tak aby hodnoty od za\u010diatku listu a\u017e po ",r.a.createElement("i",null,"i - 1")," (vr\xe1tane) boli men\u0161ie ako ",r.a.createElement("i",null,"pivot")," a hodnoty od ",r.a.createElement("i",null,"i")," a\u017e po koniec listu boli v\xe4\u010d\u0161ie ako ",r.a.createElement("i",null,"pivot"),". T\xe1to sch\xe9ma je kompaktnej\u0161ia a \u013eah\u0161ie pochopite\u013en\xe1 aj ke\u010f menej efekt\xedvna ako p\xf4vodn\xe1 Hoareova sch\xe9ma.",r.a.createElement("br",null),r.a.createElement("b",null,"Hoareova schem\xe1.")," Origin\xe1lna sch\xe9ma pop\xedsan\xe1 tvorcom quick sortu. T\xe1to sch\xe9ma vyu\u017e\xedva 2 indexy na za\u010diatku a na konci listu, ktor\xe9 sa postupne pribli\u017euj\xfa pok\xfdm nenarazia na inverziu: p\xe1r prvkov z ktor\xfdch je jeden v\xe4\u010d\u0161\xed alebo alebo rovn\xfd ",r.a.createElement("i",null,"pivotovy")," a druh\xfd men\u0161\xed alebo rovn\xfd ",r.a.createElement("i",null,"pivotovy")," a s\xfa v zlom porad\xed relat\xedvne k sebe (men\u0161\xed prvok je napravo od ",r.a.createElement("i",null,"pivota")," v\xe4\u010d\u0161\xed na\u013eavo). Potom s\xfa prvky vymenen\xe9. Ke\u010f sa indexy stretn\xfa algoritmus sa zastav\xed a vr\xe1ti fin\xe1lny index ",r.a.createElement("i",null,"pivota.")," T\xe1to sch\xe9ma je efekt\xedvnej\u0161ia preto\u017ee urob\xed v priemere a\u017e 3-kr\xe1t menej porovnan\xed ako Lomutova."),r.a.createElement("p",null,"\u010ea\u013e\u0161\xedm probl\xe9mom implement\xe1cie je potom v\xfdber ",r.a.createElement("i",null,"pivota"),". Ke\u010f\u017ee tento krok rozhoduje pr\xe1ve o tom ko\u013eko porovnan\xed algoritmus urob\xed. Ide\xe1lne chceme vybra\u0165 prvok, ktor\xfd bude vo zoradenej verzii listu pr\xe1ve v jeho strede. Poradie v akom prvky po zoraden\xed skon\u010dia v\u0161ak nevieme preto v\xfdber ",r.a.createElement("i",null,"pivota")," m\xf4\u017eme previes\u0165 nieko\u013ek\xfdmi sp\xf4sobmi. Naj\u013eah\u0161ie je vybra\u0165 za ",r.a.createElement("i",null,"pivota"),' prv\xfd, prostredn\xfd, posledn\xfd alebo n\xe1hodn\xfd prvok. Odpor\xfa\u010da sa v\u0161ak vybra\u0165 "medi\xe1n troch", pri tomto v\xfdbere ',r.a.createElement("i",null,"pivota")," sa vybere prostredn\xe1 hodnota z prv\xe9ho, prostredn\xe9ho a posledn\xe9ho prvku v liste."),r.a.createElement("div",{className:"code-section"},r.a.createElement("pre",null,"function quickSort(array, startIdx, endIdx) {\n    if(startIdx < endIdx) {\n        var pivot = partition(array, startIdx, endIdx);\n\n        quickSort(array, startIdx, pi - 1);\n        quickSort(array, pi + 1, endIdx);\n    }\n}\n\nfunction partition(array, startIdx, endIdx) {\n    \n    var pivot = array[endIdx];\n    var i = startIdx - 1;\n\n    for (var j = startIdx; j < endIdx; j++) {\n        if (array[j] < pivot) {\n            i++;\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;           \n        }\n    }\n    var temp = array[i + 1];\n    array[i + 1] = array[endIdx];\n    array[endIdx] = temp;\n    return i + 1;\n}")),r.a.createElement("div",{className:"explanation-section"},"Tak\xfdmto sp\xf4sobom je implementovan\xfd quick sort na tejto str\xe1nke. Pou\u017eit\xe1 je Lomutova sch\xe9ma a za ",r.a.createElement("i",null,"pivot")," je v\xfdbran\xfd posledn\xfd prvok v liste. Samotn\xe9 triedenie a v\xfdber pivota prebieha vo funkcii ",r.a.createElement("p",{className:"code-highlight"},"partition()"),", ktor\xe1 potom navr\xe1ti index pivota a potom funkcia ",r.a.createElement("p",{className:"code-highlight"},"quickSort()")," rekurz\xedvne vol\xe1 samu seba na\u013eavej a napravej strane listu od pivota. Toto je vo vizualiz\xe1cii zobrazen\xe9 objaven\xedm \u010fal\u0161\xedch pivotn\xfdch bodov (zelen\xe9 hodnoty) a zora\u010fovan\xedm prvkov pred nimi."),r.a.createElement("div",{className:"references-box"},r.a.createElement("b",null,"Zdroje:"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Quicksort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.youtube.com/watch?v=PgBzjlCcFvc",target:"_blank",rel:"noopener noreferrer"},"Kr\xe1tke video, ktor\xe9 zn\xe1zor\u0148uje koncept algoritmu")))))}var P=t(17),B=t.n(P);function M(e){return r.a.createElement("div",{className:"info-tab"},r.a.createElement("button",{className:"close-button",onClick:e.close},"\u2716"),r.a.createElement("h2",{className:"info-tab-title"},"Bubble Sort"),r.a.createElement("div",{className:"about-section"},r.a.createElement("p",null,"Bubble sort je jednoduch\xfd av\u0161ak ve\u013emi neefekt\xedvny tiediaci algoritmus. Kv\xf4li svojej jednoduchosti je bubble sort \u010dasto pou\u017e\xedvan\xfd na predstavenie konceptu triediaceho algoritmu. Aj ke\u010f niektor\xfd odborn\xedci doporu\u010duj\xfa aby sa u\u017e nevyu\u010doval."),r.a.createElement("h3",null,"Algoritmus:"),r.a.createElement("div",null,"Koncept bubble sortu je ve\u013emi jednoduch\xfd. Porovn\xe1va\u0165 susedn\xe9 prvky v liste a vymeni\u0165 ich v pr\xedpade ak s\xfa v zlom porad\xed. Tento postup opakova\u0165 a\u017e k\xfdm list nebude zoraden\xfd.",r.a.createElement("p",null,r.a.createElement("p",{className:"pop-up"},"\u010casov\xe1 komplexnos\u0165",r.a.createElement("div",null,"\u010casov\xe1 komplexnos\u0165 algoritmu popisuje \u010das, ktor\xfd algoritmus potrebuje k svojej exek\xfacii. Oby\u010dajne je odhadnut\xe1 po\u010ditan\xedm po\u010dtom z\xe1kladnych oper\xe1cii, ktor\xe9 algoritmus urob\xed za predpokladu \u017ee ka\u017ed\xe1 t\xe1to oper\xe1cia zaberie kon\u0161tantn\xfd \u010das."),"\xa0")," bubble sortu je O(n",r.a.createElement("sup",null,"2"),") pre priemern\xfd aj najhor\u0161\xed pr\xedpad. Kv\xf4li tomuto je bubble sort tak neefekt\xedvny. Dokonca aj in\xe9 triediace algoritmy, ktor\xe9 maj\xfa rovnak\xfa \u010dasov\xfa komplexnos\u0165 ako napr\xedklad insertion sort, s\xfa obecne r\xfdchelj\u0161ie ako bubble sort. Operuje na mieste."),r.a.createElement("div",{className:"code-section"},r.a.createElement("pre",null,"function bubbleSort(array) {\n    for (var i = 0; i < array.length - 1; i++) {\n        for (var j = 0; j < array.length - i - 1; j++) {\n            if (array[j] > array[j + 1]) {\n                const temp = array[j];\n                array[j] = array[j + 1];\n                array[j + 1] = temp;\n            }\n        }\n    }\n}")),r.a.createElement("img",{id:"bubble-sort-img",src:B.a,alt:"mal by tu by\u0165 animovan\xfd obr\xe1zok ale nen\xed :("}),r.a.createElement("div",{className:"explanation-section"},"Implementova\u0165 bubble sort je ve\u013emi jednoduch\xe9 ako m\xf4\u017ete vidie\u0165. Aj ke\u010f je bubble sort ve\u013emi neefekt\xedvny m\xe1 vyu\u017eitie v po\u010d\xedta\u010dovej grafike v\u010faka svojej schopnosti detekova\u0165 mal\xe9 chyby(ako napr\xedklad nespr\xe1vne poradie dvoch prvkov) v takmer zoraden\xfdch listoch."),r.a.createElement("div",{className:"references-box"},r.a.createElement("b",null,"Zdroje:"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Bubble_sort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.youtube.com/watch?v=nmhjrI-aW5o",target:"_blank",rel:"noopener noreferrer"},"Kr\xe1tke video, ktor\xe9 zn\xe1zor\u0148uje koncept algoritmu")))))}var _=t(18),q=t.n(_);function K(e){return r.a.createElement("div",{className:"info-tab"},r.a.createElement("button",{className:"close-button",onClick:e.close},"\u2716"),r.a.createElement("h2",{className:"info-tab-title"},"Insertion Sort"),r.a.createElement("div",{className:"about-section"},r.a.createElement("p",null,"Insertion sort je jednoduch\xfd triediaci algoritmus, ktor\xfd postupne buduje fin\xe1lny zoraden\xfd list prvok po prvku. Je neefekt\xedvny pre ve\u013ek\xe9 listy oproti pokoro\u010dilej\u0161\xedm algoritmom ako merge sort alebo quick sort. Napriek tomu m\xe1 svoje v\xfdhody."),r.a.createElement("h3",null,"Algoritmus:"),r.a.createElement("div",null,"Podobne ako ke\u010f zora\u010fujeme karty v ruk\xe1ch. Najprv zorad\xedme prv\xe9 dve a potom \u010fal\u0161ie umiestnime zodpovedaj\xfaco medzi ostatn\xe9. Insertion sort iteruje cez list a postupne z ka\u017edou iter\xe1ciou vyberie prvok a spr\xe1vne ho umiestni na jeho poz\xedciu. Tento postup opakuje a\u017e k\xfdm v liste neost\xe1vaj\xfa \u017eiadne nezoraden\xe9 prvky.",r.a.createElement("p",null,r.a.createElement("p",{className:"pop-up"},"\u010casov\xe1 komplexnos\u0165",r.a.createElement("div",null,"\u010casov\xe1 komplexnos\u0165 algoritmu popisuje \u010das, ktor\xfd algoritmus potrebuje k svojej exek\xfacii. Oby\u010dajne je odhadnut\xe1 po\u010ditan\xedm po\u010dtom z\xe1kladnych oper\xe1cii, ktor\xe9 algoritmus urob\xed za predpokladu \u017ee ka\u017ed\xe1 t\xe1to oper\xe1cia zaberie kon\u0161tantn\xfd \u010das."),"\xa0")," insertion sortu je O(n",r.a.createElement("sup",null,"2"),") pre priemern\xfd a najhor\u0161\xed pr\xedpad. Operuje na mieste. Jednou z jeho v\xfdhod je, \u017ee patr\xed medzi ",r.a.createElement("i",null,"online")," algoritmy. To znamen\xe1, \u017ee dok\xe1\u017ee spracova\u0165 d\xe1ta s\xfa\u010dasne ako ich prij\xedma. Aj ke\u010f je neefekt\xedvny pre ve\u013ek\xe9 listy, tak pre mal\xe9 listy patr\xed k najr\xfdchlej\u0161\xedm, dokonca je r\xfdchlej\u0161\xed ako quick sort."),r.a.createElement("div",{className:"code-section"},r.a.createElement("pre",null,"function insertionSort(array) {\n    var j;\n    for (var i = 1; i < array.length; i++) {\n        j = i;\n        while (j > 0 && array[j - 1] > array[j]) {\n            var temp = array[j];\n            array[j] = array[j - 1];\n            array[j - 1] = temp;\n            j--;\n        }\n    }\n}"),r.a.createElement("img",{src:q.a,style:{marginLeft:"94em",top:"16.3em"},alt:"mal by tu by\u0165 animovan\xfd obr\xe1zok ale nen\xed :("})),r.a.createElement("div",{className:"explanation-section"},"Takto jednoducho mo\u017eno implementova\u0165 insertion sort. Insertion sort m\xe1 vlastno\u0165, \u017ee po ",r.a.createElement("i",null,"n")," iter\xe1ciach je prv\xfdch ",r.a.createElement("i",null,"n")," + 1 prvkov v liste zoraden\xfdch (+ 1 preto lebo po prvej iter\xe1cii zorad\xedme hne\u010f dva prvky). Vo vizualiz\xe1cii s\xfa zelenou zv\xfdraznen\xe9 zoraden\xe9 prvky."),r.a.createElement("div",{className:"references-box"},r.a.createElement("b",null,"Zdroje:"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Insertion_sort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.youtube.com/watch?v=OGzPmgsI-pQ",target:"_blank",rel:"noopener noreferrer"},"Kr\xe1tke video, ktor\xe9 zn\xe1zor\u0148uje koncept algoritmu")))))}var Z=t(19),J=t.n(Z);function W(e){return r.a.createElement("div",{className:"info-tab"},r.a.createElement("button",{className:"close-button",onClick:e.close},"\u2716"),r.a.createElement("h2",{className:"info-tab-title"},"Selection Sort"),r.a.createElement("div",{className:"about-section"},r.a.createElement("p",null,"Selection sort je jednoduch\xfd triediaci algoritmus. Je neefekt\xedvny pre ve\u013ek\xe9 listy. Je podobn\xfd insertion sortu ale obecne menej efekt\xedvny ako insertion sort."),r.a.createElement("h3",null,"Algoritmus:"),r.a.createElement("div",null,"Selection sort rozdel\xed list na zoraden\xfa a nezoraden\xfa polovicu. Potom iteruje cez nezoraden\xfa polovicu z ktorej vybere najmen\u0161\xed prvok a vymen\xed ho s prv\xfdm prvkom v nezoradenej polovici a potom posunie hranice obidvoch polov\xedc. Zpo\u010diatku je zoraden\xe1 polovica pr\xe1zdna a nezoraden\xe1 polovica je cel\xfd list.",r.a.createElement("p",null,r.a.createElement("p",{className:"pop-up"},"\u010casov\xe1 komplexnos\u0165",r.a.createElement("div",null,"\u010casov\xe1 komplexnos\u0165 algoritmu popisuje \u010das, ktor\xfd algoritmus potrebuje k svojej exek\xfacii. Oby\u010dajne je odhadnut\xe1 po\u010ditan\xedm po\u010dtom z\xe1kladnych oper\xe1cii, ktor\xe9 algoritmus urob\xed za predpokladu \u017ee ka\u017ed\xe1 t\xe1to oper\xe1cia zaberie kon\u0161tantn\xfd \u010das."),"\xa0")," je O(n",r.a.createElement("sup",null,"2"),") pre priemern\xfd a najhor\u0161\xed pr\xedpad. Operuje na mieste."),r.a.createElement("div",{className:"code-section"},r.a.createElement("pre",null,"function selcetionSort(array) {\n    for(var i = 0; i < array.length; i++) {\n        var minIdx = i;\n        for (let j = i + 1; j < array.length; j++) {\n            if (array[j] < array[minIdx] ) {]);\n                minIdx = j;\n            }\n        }\n        var temp = array[i];\n        array[i] = array[minIdx];\n        array[minIdx] = temp;\n        }\n    }\n}"),r.a.createElement("img",{src:J.a,style:{scale:"0.56",marginLeft:"107.5em",top:"10em"},alt:"mal by tu by\u0165 animovan\xfd obr\xe1zok ale nen\xed :("})),r.a.createElement("div",{className:"explanation-section"},"T\xfdmto sp\xf4sobom je implementovan\xfd selection sort na tejto str\xe1nke. Selection sort sa od in\xfdch triediacich algoritmov l\xed\u0161i hlavne t\xfdm, \u017ee v\u017edy urob\xed najmenej ",r.a.createElement("i",null,"n")," - 1 v\xfdmien. Zoraden\xe1 polovica je vo vizualiz\xe1cii zn\xe1zornen\xe1 zelenou a najmen\u0161\xed prvok je zv\xfdraznen\xfd \xfadajne ",r.a.createElement("i",null,"hnedou")," (mo\u017eno som len farboslep\xfd). \u010cervenou je zv\xfdraznen\xfd prvok, cez ktor\xfd prav\xe9 iterujem."),r.a.createElement("div",{className:"references-box"},r.a.createElement("b",null,"Zdroje:"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Selection_sort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.youtube.com/watch?v=xWBP4lzkoyM",target:"_blank",rel:"noopener noreferrer"},"Kr\xe1tke video, ktor\xe9 zn\xe1zor\u0148uje koncept algoritmu")))))}function V(e){return r.a.createElement("div",{className:"info-tab"},r.a.createElement("button",{className:"close-button",onClick:e.close},"\u2716"),r.a.createElement("h2",{className:"info-tab-title"},"Shell Sort"),r.a.createElement("div",{className:"about-section"},r.a.createElement("p",null,"Na shell sort m\xf4\u017eme pozera\u0165 bu\u010f ako na verziu insertion sortu (v\xe4\u010d\u0161inou) alebo bubble sortu. Pracuje tak, \u017ee porovn\xe1va prvky, ktor\xe9 s\xfa od seba vzidalen\xe9 nejakou ",r.a.createElement("i",null,"medzerou"),", ktor\xfa potom postupne zmen\u0161uje. Shell sort je ",r.a.createElement("i",null,"adapt\xedvny")," algoritmus. To znamen\xe1, \u017ee je efekt\xedvnej\u0161\xed ak je vstup u\u017e \u010diasto\u010dne zoraden\xfd. Prv\xe1 verzia bola publikovan\xe1  Donaldom Shellom v roku 1959."),r.a.createElement("h3",null,"Algoritmus:"),r.a.createElement("div",null,"Princ\xedpom algoritmu je porovn\xe1va\u0165 prvky, ktor\xe9 s\xfa od seba vzdialen\xe9 nejakou ",r.a.createElement("i",null,"medzerou")," a vymeni\u0165 ich ak s\xfa v nespr\xe1vnom porad\xed narozdiel od susedn\xfdch ako v insertion sorte. T\xfato medzeru potom postupne zmen\u0161ujeme a\u017e k\xfdm nie je ve\u013ekos\u0165 ",r.a.createElement("i",null,"medzery")," 1 vtedy algoritmus pracuje rovanko ako insertion sort, po tejto iter\xe1cii je list zoraden\xfd. ",r.a.createElement("i",null,"Medzeru")," potom vypo\u010d\xedtame pre ka\u017ed\xfa iter\xe1ciu.",r.a.createElement("p",null,"Shell sort operuje na mieste. \u010casov\xe1 komplexsno\u0165 tohto algoritmu potom z\xe1vis\xed od toho ak\xfdm sp\xf4sobom vypo\u010d\xedtavame ",r.a.createElement("i",null,"medzeru"),", ktor\xe1 je medzi prvkami. V\u0161eobecne ale plat\xed, \u017ee pre najhor\u0161\xed pr\xedpad je ",r.a.createElement("p",{className:"pop-up"},"\u010dasov\xe1 komplexnos\u0165",r.a.createElement("div",null,"\u010casov\xe1 komplexnos\u0165 algoritmu popisuje \u010das, ktor\xfd algoritmus potrebuje k svojej exek\xfacii. Oby\u010dajne je odhadnut\xe1 po\u010ditan\xedm po\u010dtom z\xe1kladnych oper\xe1cii, ktor\xe9 algoritmus urob\xed za predpokladu \u017ee ka\u017ed\xe1 t\xe1to oper\xe1cia zaberie kon\u0161tantn\xfd \u010das."),"\xa0")," O(n",r.a.createElement("sup",null,"2"),") a pre priemern\xfd je to O(n",r.a.createElement("sup",null,"3/2"),") alebo O(n",r.a.createElement("sup",null,"5/4"),"). Ur\u010denie \u010dasovej komplexnosti pre niektor\xe9 sekvencie ",r.a.createElement("i",null,"medzier")," ost\xe1va ako otvoren\xfd probl\xe9m."),r.a.createElement("div",{className:"code-section"},r.a.createElement("pre",null,"function shellSort(array) {\n    for (var gap = array.length / 2 ; gap > 0; gap = gap / 2) {\n        for (var i = gap; i < array.length; i++) {\n            var temp = array[i];\n            var j;\n            for (j = i; j >= gap && array[j - gap] > temp; j -= gap) {\n                array[j] = array[j - gap]\n            }\n            array[j] = temp;\n        }\n    }\n}")),r.a.createElement("div",{className:"explanation-section"},"V tejto implement\xe1cii za\u010dneme s medzerou, ktor\xe1 je ",r.a.createElement("i",null,"d\u013a\u017eka listu/2")," a s ka\u017edou iter\xe1ciou ju zmen\u0161ime o polovicu (",r.a.createElement("i",null,"medzera/2"),"). Potom v\u017edy za\u010dneme porovn\xe1va\u0165 prvky od prvku, ktor\xfd ma index ",r.a.createElement("i",null,"medzery")," s prvkami, ktor\xe9 s\xfa v\u017edy o ve\u013ekos\u0165 na\u0161ej ",r.a.createElement("i",null,"medzery")," pred n\xedm v liste. Ak s\xfa v zlom porad\xed tak ich vymen\xedme. Takto postupujeme a\u017e k\xfdm ve\u013ekos\u0165 ",r.a.createElement("i",null,"medzery")," nie je 1. Vo vizualiz\xe1cii s\xfa potom \u010dervenou zv\xfdraznen\xe9 prvky, ktor\xe9 porovn\xe1vame a vymie\u0148ame."),r.a.createElement("div",{className:"references-box"},r.a.createElement("b",null,"Zdroje:"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Shellsort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://www.youtube.com/watch?v=SHcPqUe2GZM",target:"_blank",rel:"noopener noreferrer"},"Kr\xe1tke video, ktor\xe9 zn\xe1zor\u0148uje koncept algoritmu")))))}var Q=function(e){var a=Object(n.useState)("mergeSort"),t=Object(i.a)(a,2),o=t[0],l=t[1],s=Object(n.useState)(!1),c=Object(i.a)(s,2),m=c[0],u=c[1],p=[{value:"mergeSort",label:"Merge Sort"},{value:"quickSort",label:"Quick Sort"},{value:"bubbleSort",label:"Bubble Sort"},{value:"insertionSort",label:"Insertion Sort"},{value:"selectionSort",label:"Selection Sort"},{value:"shellSort",label:"Shell Sort"}],d={container:function(e,a){return Object(z.a)({},e,{marginLeft:"2em",alignSelf:"center",minWidth:"10em"})}};return r.a.createElement("div",null,r.a.createElement("nav",{className:"navbar-container"},r.a.createElement("div",{className:"generate-button"},r.a.createElement("button",{id:"genButton",onClick:function(){return e.methods.resetArray()},disabled:e.isSorting},r.a.createElement("span",null,"Generova\u0165"))),r.a.createElement(x.a,{options:p,onChange:function(e){l(e.value)},defaultValue:p[0],styles:d}),r.a.createElement("div",{className:"ask-button",onClick:function(){return u(!0)}},r.a.createElement("button",null,r.a.createElement("span",null,"?"))),r.a.createElement("div",{className:"slider-container"},r.a.createElement("input",{type:"range",min:"10",max:"350",className:"slider",value:e.arrSize,onChange:function(a){e.methods.setArrSize(a.target.value)}}),r.a.createElement("p",{className:"slider-text"},"Po\u010det prvkov: ",e.arrSize)),r.a.createElement("input",{type:"text",className:"sorting-speed-area",placeholder:e.sortSpeed,onChange:function(a){Number.isInteger(parseInt(a.target.value))&&(console.log(a.target.value),e.methods.setSortSpeed(parseInt(a.target.value)))}}),r.a.createElement("div",{className:"sort-button"},r.a.createElement("button",{id:"sortButton",onClick:function(){switch(o){case"mergeSort":e.methods.mergeSort();break;case"quickSort":e.methods.quickSort();break;case"bubbleSort":e.methods.bubbleSort();break;case"insertionSort":e.methods.insertionSort();break;case"selectionSort":e.methods.selectionSort();break;case"shellSort":e.methods.shellSort();break;default:console.error("nemalo by sa nikdy sta\u0165")}},disabled:e.isSorting},r.a.createElement("span",null,"Zoradi\u0165")))),r.a.createElement(N.a,{isOpen:m,closeTimeoutMS:200},function(){var e;switch(o){case"mergeSort":e=r.a.createElement(A,{close:function(){return u(!1)}});break;case"quickSort":e=r.a.createElement(T,{close:function(){return u(!1)}});break;case"bubbleSort":e=r.a.createElement(M,{close:function(){return u(!1)}});break;case"insertionSort":e=r.a.createElement(K,{close:function(){return u(!1)}});break;case"selectionSort":e=r.a.createElement(W,{close:function(){return u(!1)}});break;case"shellSort":e=r.a.createElement(V,{close:function(){return u(!1)}});break;default:console.error("nemalo by sa nikdy sta\u0165")}return e}()))};function R(e){return r.a.createElement("div",{className:"info-tab"},r.a.createElement("button",{className:"close-button",onClick:e.close},"\u2716"),r.a.createElement("h2",{className:"info-tab-title"},"O projekte"),r.a.createElement("div",{className:"about-section"},r.a.createElement("p",null,"Tento projekt vznikol z kopy vo\u013en\xe9ho \u010dasu a s \xfamyslom nau\u010di\u0165 sa pracova\u0165 s React.js frameworkom a zlep\u0161i\u0165 sa v JavaScripte. Ide o interakt\xedvnu SPA aplik\xe1ciu, ktorej z\xe1kladom je u\u017e spomenut\xfd React.js framework. In\u0161pir\xe1ciou pre aplik\xe1ciu bolo toto ",r.a.createElement("a",{href:"https://www.youtube.com/watch?v=pFXYym4Wbkc",target:"_blank",rel:"noopener noreferrer"},"video.")),r.a.createElement("p",null,"T\xe9mou s\xfa algoritmy. Konkr\xe9tne triediace algoritmy. Cie\u013eom je predstavi\u0165 u\u017e\xedvate\u013eovi niektor\xe9 najzn\xe1mej\u0161ie tieto algoritmy a vizu\xe1lne zn\xe1zorni\u0165 ako pracuj\xfa. Ku ka\u017ed\xe9mu algoritmu potom existuje aj infokarta, ktor\xe1: vysvset\u013euje ako algoritmus pracuje, ak\xe9 s\xfa niektor\xe9 jeho vlastnosti, kde sa vyu\u017e\xedva, nejak\xe9 zauj\xedmav\xe9 inform\xe1cie o danom algoritme, spolu s uk\xe1\u017ekou ako sa d\xe1 dan\xfd algoritmus implementova\u0165. U\u017e\xedvate\u013e m\xe1 mo\u017enos\u0165 meni\u0165 niektor\xe9 hodnoty a vidie\u0165 rozdiel, ktor\xfd ich zmena prinesie."),r.a.createElement("h3",null,"Ovl\xe1danie"),r.a.createElement("p",null,"Tla\u010didlo ",r.a.createElement("i",null,"Generova\u0165")," v\u013eavo vygeneruje nov\xfd list s n\xe1hodnymi hodnotami. Ve\u013ekos\u0165 toho listu ur\u010duje potom hodnota ",r.a.createElement("i",null,"Po\u010det prvkov"),", ktor\xe1 sa d\xe1 upravi\u0165 sliderom. Ka\u017ed\xfd modr\xfd p\xe1sik potom predstavuje hodnotu medzi 5 a\u017e 1000 (cel\xe9 \u010d\xedsla). Tla\u010didlo ",r.a.createElement("i",null,"Zoradi\u0165")," potom zorad\xed moment\xe1lny list za vyu\u017eitia pr\xe1ve zvolen\xe9ho algoritmu. Algoritmy mo\u017eno voli\u0165 z dropdownu ved\u013ea tla\u010didla ",r.a.createElement("i",null,"Generova\u0165"),". Ot\xe1znik na\u013eavo od dropdownu zobraz\xed infokartu o pr\xe1ve zvolenom algoritme. R\xfdchlos\u0165 akou triedenie prebieha ur\u010duje mal\xe9 pole ved\u013ea tla\u010didla ",r.a.createElement("i",null,"Zoradi\u0165"),". Do tohto po\u013ea je mo\u017en\xe9 vp\xedsa\u0165 \u013eubovoln\xe9 \u010dislo. Toto \u010dislo potom predstavuje zdr\u017eanie v ",r.a.createElement("i",null,"milisekund\xe1ch"),", ktor\xe9 bude medzi jednotliv\xedmi krokmi algoritmu. Z\xe1kladna hodnota pre toto pole je 5",r.a.createElement("i",null,"ms"),". T\xe1to hodnota je potom pou\u017eit\xe1 ak je do po\u013ea zadan\xe1 nespr\xe1vna hodnota (text) alebo nie je zadan\xe1 \u017eiadna hodnota. Doporu\u010den\xe9 s\xfa hodnoty medzi 1 a\u017e 50 ",r.a.createElement("i",null,"ms"),". Ale ak m\xe1te cel\xfd de\u0148 podporovan\xe9 s\xfa hodnoty aj nad 1000",r.a.createElement("i",null,"ms"),". Pre bubble sort doporu\u010dujem r\xfdchlos\u0165 1",r.a.createElement("i",null,"ms")," pre ",r.a.createElement("i",null,"Po\u010det prvkov")," nad 75 prvkov."),r.a.createElement("h3",null,"Predpoklady pre u\u017e\xedvate\u013ea"),r.a.createElement("p",null,"Aplik\xe1cia nie je ur\u010den\xe1 pre oby\u010dajn\xe9ho \u010eurka alebo Janka. Predpoklad\xe1 sa, \u017ee u\u017e\xedvate\u013e je obozn\xe1men\xfd so z\xe1kladn\xfdmi princ\xedpmi programovania a vie \u010do znamen\xe1 pojem ",r.a.createElement("i",null,"array")," (v tejto aplik\xe1cii preklad\xe1m ako ",r.a.createElement("i",null,"list."),") ",r.a.createElement("i",null,"Pseudocode"),", ktor\xfdm s\xfa nap\xedsan\xe9 implement\xe1cie je len mierne upraven\xfd p\xf4vodn\xfd JavaScript (d\xfafam \u017ee n\xe1zvy variabilov v uk\xe1\u017ekach s\xfa dos\u0165 sebav\xfdsti\u017en\xe9). Samotn\xe9 uk\xe1\u017eky sa len m\xe1lo l\xed\u0161ia od toho ako s\xfa dan\xe9 algoritmy implementovan\xe9 pr\xe1ve v tejto aplik\xe1cii."),r.a.createElement("h3",null,"Autor"),r.a.createElement("p",null,"Aplik\xe1ciu vytvoril Martin Mich\xe1lik. Vek 16 rokov. Toho \u010dasu e\u0161te \u017eiak z\xe1kladnej \u0161koly.",r.a.createElement("br",null),r.a.createElement("a",{href:"https://github.com/MatiniX/SortingVisualizer",target:"_blank",rel:"noopener noreferrer"},"GitHub")),r.a.createElement("p",{style:{opacity:"0.8",marginTop:"10em"}},r.a.createElement("b",null,"PS:")," Ak spust\xedte vizualiz\xe1ciu niektor\xe9ho algoritmu mus\xedte po\u010dkat a\u017e k\xfdm vizualiz\xe1cia neskon\u010di. Tak\u017ee ak sa v\xe1m stane, \u017ee pust\xedte bubble sort na liste s 150+ prvkami hoci aj na z\xe1kladnej r\xfdchlosti 5",r.a.createElement("i",null,"ms")," (ako dlho bude trva\u0165 anim\xe1cia cel\xe9ho buble sortu m\xf4\u017ete potom vypo\u010dita\u0165 vozorcomm (",r.a.createElement("i",null,"n",r.a.createElement("sup",null,"2"),"*zdr\u017eanie(ms)*2"),") kde ",r.a.createElement("i",null,"n")," je po\u010det prvkov). Ak sa ocitnete v takejto situ\xe1cii a nechcete \u010daka\u0165 rie\u0161en\xedm je stla\u010di\u0165 ",r.a.createElement("i",null,"F5")," (jednoducho refreshn\xfa\u0165 str\xe1nku). T\xe1to infokarta sa zobraz\xed len pri otvoren\xed str\xe1nky (ak ju chcete zobrzi\u0165 znova mus\xedte str\xe1nku zavori\u0165 a znova otvori\u0165).")))}var G=function(e,a){return Math.max(e,Math.round(a*Math.random()))},L=function(){null===sessionStorage.getItem("infoModalBool")&&sessionStorage.setItem("infoModalBool",JSON.stringify(!0));var e=Object(n.useState)(JSON.parse(sessionStorage.getItem("infoModalBool"))),a=Object(i.a)(e,2),t=a[0],o=a[1],l=Object(n.useState)(5),s=Object(i.a)(l,2),c=s[0],m=s[1],u=function(e){var a=Object(n.useState)(e),t=Object(i.a)(a,2),r=t[0],o=t[1];return Object(n.useEffect)((function(){!function(){for(var e=[],a=0;a<r;a++)e.push(G(5,1e3));console.log(e),z(e)}()}),[r]),[r,o]}(100),p=Object(i.a)(u,2),d=p[0],v=p[1],k=Object(n.useState)(!1),b=Object(i.a)(k,2),h=b[0],j=b[1],y=Object(n.useState)([]),g=Object(i.a)(y,2),E=g[0],z=g[1];function x(){j(!1)}function S(e){var a=document.getElementById("genButton"),t=document.getElementById("sortButton");console.log(a),console.log(t),a.disabled=e,t.disabled=e}return Object(n.useEffect)((function(){sessionStorage.setItem("infoModalBool",t)}),[t]),r.a.createElement(r.a.Fragment,null,r.a.createElement(Q,{methods:{resetArray:function(){for(var e=[],a=0;a<d;a++)e.push(G(5,1e3));console.log(e),z(e)},setArrSize:v,setSortSpeed:m,setIsSorting:j,mergeSort:function(){var e=document.getElementsByClassName("array-bar");j(!0),f.getMergeSortAnimations(E,e,c,x)},quickSort:function(){var e=document.getElementsByClassName("array-bar");j(!0),f.getQuickSortAnimations(E,e,c,x)},bubbleSort:function(){S(!0);for(var e=f.getBubbleSortAnimations(E),a=function(a){var t=document.getElementsByClassName("array-bar");if(a%4===1||a%4===2)setTimeout((function(){var n=Object(i.a)(e[a],2),r=n[0],o=n[1];t[r].style.height="".concat(.75*o,"px")}),a*c);else{var n=a%4===0?"#dd0510":"#05b2dd",r=Object(i.a)(e[a],2),o=r[0],l=r[1],s=t[o].style,m=t[l].style;setTimeout((function(){s.backgroundColor=n,m.backgroundColor=n,a===e.length-1&&S(!1)}),a*c)}},t=0;t<e.length;t++)a(t)},insertionSort:function(){S(!0);var e=f.getInsertionSortAnimations(E);console.log(e);for(var a=0;a<e.length;a++){var t=document.getElementsByClassName("array-bar");if(0===a)!function(){var e=t[a].style;setTimeout((function(){e.backgroundColor="green"}),a*c)}();else if(a===e.length-1){var n=!0,r=!1,o=void 0;try{for(var l,s=function(){var e=l.value.style;setTimeout((function(){e.backgroundColor="#05b2dd",S(!1)}),a*c)},m=t[Symbol.iterator]();!(n=(l=m.next()).done);n=!0)s()}catch(u){r=!0,o=u}finally{try{n||null==m.return||m.return()}finally{if(r)throw o}}}else!function(){var n=Object(i.a)(e[a],3),r=n[0],o=n[1],l=n[2],s=t[r].style;setTimeout((function(){s.backgroundColor=l,s.height="".concat(.75*o,"px")}),a*c)}()}},selectionSort:function(){S(!0);var e=f.getSelectionSortAnimations(E);console.log(e);for(var a=0;a<e.length;a++){var t=document.getElementsByClassName("array-bar");if(a===e.length-1){var n=!0,r=!1,o=void 0;try{for(var l,s=function(){var e=l.value.style;setTimeout((function(){e.backgroundColor="#05b2dd",S(!1)}),a*c)},m=t[Symbol.iterator]();!(n=(l=m.next()).done);n=!0)s()}catch(u){r=!0,o=u}finally{try{n||null==m.return||m.return()}finally{if(r)throw o}}}else!function(){var n=Object(i.a)(e[a],3),r=n[0],o=n[1],l=n[2],s=t[r].style;setTimeout((function(){s.height="".concat(.75*o,"px"),s.backgroundColor=l}),a*c)}()}},shellSort:function(){S(!0);var e=f.getShellSortAnimations(E);console.log(e);for(var a=function(a){var t=document.getElementsByClassName("array-bar"),n=Object(i.a)(e[a],3),r=n[0],o=n[1],l=n[2];if("compare"===l){var s=t[r].style,m=t[o].style;setTimeout((function(){s.backgroundColor="#05b2dd"!==s.backgroundColor?"#dd0510":"#05b2dd",m.backgroundColor="#05b2dd"!==m.backgroundColor?"#dd0510":"#05b2dd"}),a*c)}else{var u=t[r].style;setTimeout((function(){u.backgroundColor=l,u.height="".concat(.75*o,"px"),a===e.length-1&&S(!1)}),a*c)}},t=0;t<e.length;t++)a(t)}},arrSize:d,sortSpeed:c,isSorting:h}),r.a.createElement("div",{className:"array-container"},E.map((function(e,a){return r.a.createElement("div",{className:"array-bar",key:a,style:{height:"".concat(.75*e,"px")}})}))),r.a.createElement(N.a,{isOpen:t},r.a.createElement(R,{close:function(){return o(!1)}})))};var D=function(){return r.a.createElement("div",{className:"App"},r.a.createElement(L,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(D,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[22,1,2]]]);
//# sourceMappingURL=main.9d1ebc6c.chunk.js.map